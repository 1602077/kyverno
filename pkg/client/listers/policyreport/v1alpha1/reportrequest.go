/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kyverno/kyverno/pkg/api/policyreport/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ReportRequestLister helps list ReportRequests.
type ReportRequestLister interface {
	// List lists all ReportRequests in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ReportRequest, err error)
	// ReportRequests returns an object that can list and get ReportRequests.
	ReportRequests(namespace string) ReportRequestNamespaceLister
	ReportRequestListerExpansion
}

// reportRequestLister implements the ReportRequestLister interface.
type reportRequestLister struct {
	indexer cache.Indexer
}

// NewReportRequestLister returns a new ReportRequestLister.
func NewReportRequestLister(indexer cache.Indexer) ReportRequestLister {
	return &reportRequestLister{indexer: indexer}
}

// List lists all ReportRequests in the indexer.
func (s *reportRequestLister) List(selector labels.Selector) (ret []*v1alpha1.ReportRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReportRequest))
	})
	return ret, err
}

// ReportRequests returns an object that can list and get ReportRequests.
func (s *reportRequestLister) ReportRequests(namespace string) ReportRequestNamespaceLister {
	return reportRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ReportRequestNamespaceLister helps list and get ReportRequests.
type ReportRequestNamespaceLister interface {
	// List lists all ReportRequests in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ReportRequest, err error)
	// Get retrieves the ReportRequest from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ReportRequest, error)
	ReportRequestNamespaceListerExpansion
}

// reportRequestNamespaceLister implements the ReportRequestNamespaceLister
// interface.
type reportRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ReportRequests in the indexer for a given namespace.
func (s reportRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ReportRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReportRequest))
	})
	return ret, err
}

// Get retrieves the ReportRequest from the indexer for a given namespace and name.
func (s reportRequestNamespaceLister) Get(name string) (*v1alpha1.ReportRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("reportrequest"), name)
	}
	return obj.(*v1alpha1.ReportRequest), nil
}
